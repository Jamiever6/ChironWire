[include fluidd.cfg]
[include stealthburner_leds.cfg]
[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

###KLIPPER CONFIG FOR MODIFIED ANYCUBIC CHIRON (VORON SWITCHWIRE STEALTHBURNER-CW2 CAN-BUS)###

###MCUs###

[include mainsail.cfg]
[mcu]
serial: /dev/serial/by-id/YOUR_MCUID

[mcu EBBCan]
canbus_uuid: YOURCANBUS_UUID

[temperature_sensor SoC]
sensor_type: temperature_host

[temperature_sensor MCU]
sensor_type: temperature_mcu

###------------------------------------###
###           KINEMATICS               ###
###------------------------------------###

[printer]
kinematics: corexz
max_velocity: 400
max_accel: 4000
max_z_velocity: 30
max_z_accel: 200

[safe_z_home]
home_xy_position: 200,200
speed: 60
z_hop: 10
z_hop_speed: 20

###------------------------------------###
#           EBB 2209                   ###
###------------------------------------###

[temperature_sensor EBB_NTC]
sensor_type: Generic 3950
sensor_pin: EBBCan: PA2

[adxl345]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: z,-y,x

[resonance_tester]
probe_points: 200, 200, 20
accel_chip: adxl345

[extruder]
step_pin: EBBCan: PD0
dir_pin: !EBBCan: PD1
enable_pin: !EBBCan: PD2
microsteps: 32
##	rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 21.998356	#Bondtech 5mm Drive Gears
gear_ratio: 50:10				#BMG Gear Ratio
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan: PB13
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: EBBCan: PA3
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 15
max_temp: 250

# sensor_type:MAX31865
# sensor_pin: EBBCan: PA4
# spi_bus: spi1
# rtd_nominal_r: 100
# rtd_reference_r: 430
# rtd_num_of_wires: 2

[tmc2209 extruder]
uart_pin: EBBCan: PA15
run_current: 0.650
stealthchop_threshold: 999999

[fan]
##	Print Cooling Fan - CNC_FAN2
pin: EBBCan: PA1
kick_start_time: 0.5
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan hotend_fan]
##	hot end - CNC_FAN1
pin: EBBCan: PA0
heater: extruder
heater_temp: 50.0

#[heater_fan 4W_FAN0]
#pin: EBBCan: PB14
#tachometer_pin: EBBCan: PB15
#tachometer_ppr: 1

#[neopixel hotend_rgb]
#pin: EBBCan:PD3

## NPN and PNP proximity switch types can be set by jumper
#[probe]
#pin: ^EBBCan: PC13

#[output_pin PB5]
#pin: EBBCan: PB5

#[output_pin PB7]
#pin: EBBCan: PB7

#[output_pin PB6]
#pin: EBBCan: PB6

###STEPPERS###

### THESE ARE KNOWN GOOD VALUES FOR STOCK STEPPERS AND DRIVERS SHOULD NOT NEED TO BE MODIFIED.

[stepper_x]
#Motor 0
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
microsteps: 16
rotation_distance: 40
endstop_pin: EBBCan: PB6
full_steps_per_rotation: 200  #set to 400 for 0.9 degree stepper
position_min: 0
position_endstop: 407 #check your measurement
position_max: 407 #check your measurement
homing_speed: 80   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC4
interpolate: True
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_z]
#Motor 2
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
microsteps: 16
rotation_distance: 40
Full_steps_per_rotation = 200
endstop_pin: probe:z_virtual_endstop
position_min: -1
position_max: 400
homing_speed: 20.0

[tmc2209 stepper_z]
uart_pin: PC6
interpolate: True
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_y]
#Motor 1
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
microsteps: 16
rotation_distance: 32
Full_steps_per_rotation = 200
#step_distance: .01
endstop_pin: ^!PG9
position_min: -30
position_endstop: -30
position_max: 375 #keeping the Z profiles in the original Chiron position
homing_speed: 80.0

[tmc2209 stepper_y]
uart_pin: PD11
interpolate: True
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0


###-------------------------###
###           BED           ###
###-------------------------###

[heater_bed]
heater_pin: PA3
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PF3
#control: pid
#pid_Kp: 67.675
#pid_Ki: 1.920
#pid_Kd: 596.390
min_temp: 10
max_temp: 120 
pwm_cycle_time: 0.2 #EUfrequency

[bed_mesh]
speed: 150
horizontal_move_z: 10
mesh_min: 60,60
mesh_max: 340, 340
probe_count: 5,5

[heater_fan controller_fan]
pin: PD12
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0
heater: heater_bed
heater_temp: 18
fan_speed: 0.4

###MISC###

###----------------------------------------------###
###                     LEDS                     ###
###----------------------------------------------###

[neopixel case_leds]
pin: PB0
#chain_count: 6
#color_order: GRB
#initial_RED: 1
#initial_GREEN: 1
#initial_BLUE: 1

[gcode_arcs]
resolution: 1.0

[display_status]

###----------------------------------------------###
###                   CR Touch                   ###
###----------------------------------------------###

[bltouch]
sensor_pin: EBBCan: PB8
control_pin: EBBCan: PB9
x_offset: 36
y_offset: 19
#z_offset: 2.01
speed: 20.0

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=PC5

# See the sample-lcd.cfg file for definitions of common LCD displays.

#####################################################################
# 	Displays
#####################################################################

## 	Uncomment the display that you have
#--------------------------------------------------------------------

#[display]
##	RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

#--------------------------------------------------------------------

[display]
#	mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

[neopixel btt_mini12864]
#	To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

##	Set RGB values on boot up for each Neopixel. 
##	Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
       SET_LED LED=btt_mini12864 RED=0.5 GREEN=0.5 BLUE=0 INDEX=1 TRANSMIT=0
       SET_LED LED=btt_mini12864 RED=0.5 GREEN=0.5 BLUE=0 INDEX=2 TRANSMIT=0
       SET_LED LED=btt_mini12864 RED=0.5 GREEN=0.5 BLUE=0 INDEX=3 

 
######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro PARK_MACRO]
#default_parameter_X: 0.0
#default_parameter_Y: -85
#default_parameter_Z: 30
gcode:
 #       M117 Parking..
        G91
        G1 E-20 F1500
        G1 Z{Z}
        G90
        G1 X{X} Y{Y} F3000

[gcode_macro PAUSE_MACRO]
gcode:
        M117 Pause activated
        PAUSE
        PARK_MACRO
        SET_IDLE_TIMEOUT TIMEOUT=999999

# Pause/Resume functionality with support of position capture and restore
[pause_resume]
recover_velocity: 40

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=<M600_State>
    PAUSE
    SET_IDLE_TIMEOUT TIMEOUT=999999
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-30 F1000
    RESTORE_GCODE_STATE NAME=<M600_State>
    
    ###FILAMENT RUNOUT
    
[filament_switch_sensor FSensor]
pause_on_runout: True
runout_gcode:M600 
insert_gcode: M117 RunOut False
event_delay: 8.0
switch_pin: ^!PG11

[output_pin beeper]
pin: EXP1_1
value: 0
shutdown_value: 0
pwm: True
cycle_time: 0.0005 ; Default beeper tone in kHz. 1 / 0.0005 = 2000Hz (2kHz)   

###################
###   MACROS    ###
###################

#MESH

[gcode_macro G29]
gcode:
  {% set t = params.T|default(0)|float %}

  {% if printer.idle_timeout.state == "Printing" %}
    {action_respond_info("This command cannot be used while printing")}
  {% elif printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    SAVE_GCODE_STATE NAME=G29_state
    G90
    G1 Z20 F1000
    {% if t > 30.0 %}
      M190 S{t}
    {% endif %}
    BED_MESH_CALIBRATE
    {% if 'S' in params %}
      M140 S{params.S}
    {% endif %}
    G90
    G1 Z20 F1000
    G1 X-5 Y0 F6000
    RESTORE_GCODE_STATE NAME=G29_state MOVE=0
  {% endif %}

	

######################################################################
# Start Print and End Print
######################################################################

# Replace the slicer's custom start and end g-code scripts with
# START_PRINT and END_PRINT.

[gcode_macro START_PRINT]
gcode:
  {% set BED_TEMP = params.BED_TEMP|default(65)|float %}
   {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(220)|float %}
   Home
   #G28 ;HOME ALL
   M117 Waiting for temperature; Message
   M190 S{BED_TEMP}; Set temp to Cura Initial & wait; 
   M109 S{EXTRUDER_TEMP}; Set temp to Cura Initial & wait
   SET_GCODE_OFFSET Z=0.0
    #BED_MESH_PROFILE LOAD=<default>
    # Move the nozzle near the bed
    G90 #use absolute coordinates
    G1 Z5 F3000
    # Move the nozzle very close to the bed
    G1 Z0.70 F300
    PURGE_LINE ## PRIMES NOZZLE EDGE OF BED
    
[gcode_macro PURGE_LINE]
gcode:
#PURGE
    G90
    G1 X10 Y0 F3000
    G1 Y125 E10 F3000

[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X0 Y0 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000                    ; move nozzle up 10mm
    G90                            ; absolute positioning
    G0  X200 Y360 F3600            ; park nozzle at rear
    #G91
    #G1 Z15 F3000
    #G1 X-100 Y200
    # Disable steppers
    M84


[gcode_macro Home]
gcode:
    {% set ns = namespace(MUSTHOME= false) %}
    {% for AXIS in ["x", "y", "z"] %}
        {% if AXIS in printer.toolhead.homed_axes %}
            M117 "{AXIS} is already homed"
        {% else %}
            M117 "{AXIS} not homed"
            {% set ns.MUSTHOME = true %}
        {% endif %}
    {% endfor %}   
    {% if ns.MUSTHOME == true %}
        G28
        M117 "homing"
    {% endif %}
    
#BEEPER
[gcode_macro BEEPER]
gcode:
    # Parameters
    {% set i = params.I|default(1)|int %}           ; Iterations (number of times to beep).
    {% set dur = params.DUR|default(100)|int %}     ; Duration/wait of each beep in ms. Default 100ms.
    {% set freq = params.FREQ|default(2000)|int %}  ; Frequency in Hz. Default 2kHz.

    {% for iteration in range(i|int) %}
        SET_PIN PIN=beeper VALUE=0.8 CYCLE_TIME={ 1.0/freq if freq > 0 else 1 }
        G4 P{dur}
        SET_PIN PIN=beeper VALUE=0
        G4 P{dur}
    {% endfor %}

[gcode_macro M300]
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=BEEPER_pin VALUE=0

#=====================================================================================
# RINGTONES
#=====================================================================================

[gcode_macro IMPERIAL_MARCH]
gcode:
  {% set notes = [
    (440, 500), (0, 250), (440, 500), (0, 250), (440, 500), (0, 250),
    (349, 350), (523, 150), (440, 500), (0, 250), (349, 350), (523, 150), (440, 1000), (0, 250),
    (659, 500), (0, 250), (659, 500), (0, 250), (659, 500), (0, 250),
    (698, 350), (523, 150), (415, 500), (0, 250), (349, 350), (523, 150), (440, 1000), (0, 250),
  #  (880, 500), (0, 250), (440, 300), (0, 150), (440, 150), (0, 50),
  #  (880, 500), (0, 250), (440, 300), (0, 150), (440, 150), (0, 50),
  #  (880, 500), (0, 250), (440, 300), (0, 150), (523, 150), (0, 50),
   # (784, 500), (0, 250), (392, 300), (0, 150), (392, 150), (0, 50),
    #(784, 500), (0, 250), (740, 300), (0, 150), (740, 150), (0, 50),
   # (784, 500), (0, 250), (740, 300), (0, 150), (698, 150), (0, 50),
   # (659, 500), (0, 250), (415, 300), (0, 150), (415, 150), (0, 50),
   # (659, 500), (0, 250), (523, 300), (0, 150), (523, 150), (0, 50),
   # (440, 1000), (0, 250)
  ] %}

  {% for note, duration in notes %}
    SET_PIN PIN=beeper VALUE=0.8 CYCLE_TIME={ 1.0/note if note > 0 else 1 }
    G4 P{duration}
    SET_PIN PIN=beeper VALUE=0
    G4 P50
  {% endfor %}

[gcode_macro SOS_TUNE]
gcode:
    # Parameters
    {% set i = params.I|default(5)|int %} ; Iterations (number of times to play the pattern).
    {% set dur = params.DUR|default(100)|int %} ; Duration/wait of each beep in ms. Default 100ms.
    {% set freq = params.FREQ|default(2000)|int %} ; Frequency in Hz. Default 2kHz.
    {% for iteration in range(i|int) %}
    # Short beep
    SET_PIN PIN=beeper VALUE=0.8 CYCLE_TIME={ 1.0/freq if freq > 0 else 1 }
    G4 P{dur}
    SET_PIN PIN=beeper VALUE=0
    G4 P{dur}

    # Long beep
    SET_PIN PIN=beeper VALUE=0.8 CYCLE_TIME={ 1.0/freq if freq > 0 else 1 }
    G4 P{dur * 2}
    SET_PIN PIN=beeper VALUE=0
    G4 P{dur}

    # Short beep
    SET_PIN PIN=beeper VALUE=0.8 CYCLE_TIME={ 1.0/freq if freq > 0 else 1 }
    G4 P{dur}
    SET_PIN PIN=beeper VALUE=0
    G4 P{dur}
    {% endfor %}

[gcode_macro FUNNY_RINGTONE]
gcode:
  # Shave and a Haircut, Two Bits
  BEEPER I=1 DUR=100 FREQ=880   ; A5
  G4 P50
  BEEPER I=1 DUR=100 FREQ=587   ; D5
  G4 P50
  BEEPER I=1 DUR=100 FREQ=587   ; D5
  G4 P150
  BEEPER I=1 DUR=100 FREQ=698   ; F5
  G4 P50
  BEEPER I=1 DUR=100 FREQ=587   ; D5
  G4 P200
  BEEPER I=1 DUR=100 FREQ=392   ; G4
  G4 P50
  BEEPER I=1 DUR=100 FREQ=523   ; C5

[gcode_macro STARTUP_TUNE]
gcode:
  {% set notes = [      
    (659, 100), (659, 100), (0, 100), (659, 100), (0, 300),      
    (523, 100), (659, 100), (0, 300), (784, 100), (0, 300),      
    (392, 100), (0, 300), (523, 100), (0, 150), (392, 100),      
    (0, 150), (330, 100), (0, 150), (440, 100), (0, 300),      
    (494, 100), (0, 300), (466, 100), (0, 100), (440, 100)  
    ] %}

  {% for note, duration in notes %}
    SET_PIN PIN=beeper VALUE=0.8 CYCLE_TIME={ 1.0/note if note > 0 else 1 }
    G4 P{duration}
    SET_PIN PIN=beeper VALUE=0
    G4 P50
  {% endfor %}
[gcode_macro SUCCESS_TUNE]
gcode:
  {% set notes = [      
    (1047, 100), (0, 100), (1047, 100), (0, 100), (1047, 100),      
    (0, 100), (1047, 100), (0, 100), (1047, 100), (0, 100),      
    (1047, 100), (0, 100), (1047, 100), (0, 100), (1047, 100),      
    (0, 100), (1047, 100), (0, 100), (1047, 100), (0, 100),      
    (1047, 100)  
    ] %}

  {% for note, duration in notes %}
    SET_PIN PIN=beeper VALUE=0.8 CYCLE_TIME={ 1.0/note if note > 0 else 1 }
    G4 P{duration}
    SET_PIN PIN=beeper VALUE=0
    G4 P50
  {% endfor %}

[gcode_macro ERROR_TUNE]
gcode:
  {% set notes = [      
  (261, 100), (0, 100), (261, 100), (0, 100), (261, 100),
  (0, 100), (261, 100), (0, 100), (261, 100), (0, 100),   
  (261, 100), (0, 100), (261, 100), (0, 100), (261, 100),   
  (0, 100), (261, 100), (0, 100), (261, 100), (0, 100),   
  (261, 100)  ] %}

  {% for note, duration in notes %}
    SET_PIN PIN=beeper VALUE=0.8 CYCLE_TIME={ 1.0/note if note > 0 else 1 }
    G4 P{duration}
    SET_PIN PIN=beeper VALUE=0
    G4 P50
  {% endfor %}

[gcode_macro HAPPY_BIRTHDAY]
gcode:
  # Happy Birthday 
  {% set extended = 2 %}   ; Repeat the tune this many times
  {% for _ in range(extended) %}
  BEEPER I=1 DUR=100 FREQ=264  ; C4
  BEEPER I=1 DUR=100 FREQ=264  ; C4
  BEEPER I=1 DUR=200 FREQ=297  ; D4
  BEEPER I=1 DUR=200 FREQ=264  ; C4
  BEEPER I=1 DUR=200 FREQ=352  ; F4
  BEEPER I=1 DUR=400 FREQ=330  ; E4
  G4 P200
  BEEPER I=1 DUR=100 FREQ=264  ; C4
  BEEPER I=1 DUR=100 FREQ=264  ; C4
  BEEPER I=1 DUR=200 FREQ=297  ; D4
  BEEPER I=1 DUR=200 FREQ=264  ; C4
  BEEPER I=1 DUR=200 FREQ=396  ; G4
  BEEPER I=1 DUR=400 FREQ=352  ; F4
  G4 P200
  BEEPER I=1 DUR=100 FREQ=264  ; C4
  BEEPER I=1 DUR=100 FREQ=264  ; C4
  BEEPER I=1 DUR=100 FREQ=528  ; C5
  BEEPER I=1 DUR=200 FREQ=440  ; A4
  BEEPER I=1 DUR=200 FREQ=352  ; F4
  BEEPER I=1 DUR=200 FREQ=330  ; E4
  BEEPER I=1 DUR=200 FREQ=297  ; D4
  G4 P200
  BEEPER I=1 DUR=100 FREQ=466  ; A#4
  BEEPER I=1 DUR=100 FREQ=466  ; A#4
  BEEPER I=1 DUR=200 FREQ=440  ; A4
  BEEPER I=1 DUR=200 FREQ=352  ; F4
  BEEPER I=1 DUR=200 FREQ=396  ; G4
  BEEPER I=1 DUR=400 FREQ=352  ; F4
  G4 P200
  {% endfor %}

[gcode_macro TWINKLE_TWINKLE]
gcode:
  # Twinkle Twinkle Little Star
  BEEPER I=1 DUR=100 FREQ=264  ; C4
  BEEPER I=1 DUR=100 FREQ=264  ; C4
  BEEPER I=1 DUR=100 FREQ=297  ; D4
  BEEPER I=1 DUR=100 FREQ=297  ; D4
  BEEPER I=1 DUR=100 FREQ=330  ; E4
  BEEPER I=1 DUR=100 FREQ=330  ; E4
  BEEPER I=1 DUR=100 FREQ=297  ; D4
  G4 P400
  BEEPER I=1 DUR=100 FREQ=281  ; C#4
  BEEPER I=1 DUR=100 FREQ=281  ; C#4
  BEEPER I=1 DUR=100 FREQ=264  ; C4
  BEEPER I=1 DUR=100 FREQ=264  ; C4
  BEEPER I=1 DUR=100 FREQ=247  ; B3
  BEEPER I=1 DUR=100 FREQ=247  ; B3
  BEEPER I=1 DUR=100 FREQ=220  ; A3
  G4 P400

[gcode_macro JINGLE_BELLS]
gcode:
  # Jingle Bells
  BEEPER I=1 DUR=100 FREQ=330  ; E4
  BEEPER I=1 DUR=100 FREQ=330  ; E4
  BEEPER I=1 DUR=100 FREQ=330  ; E4
  G4 P200
  BEEPER I=1 DUR=100 FREQ=330  ; E4
  BEEPER I=1 DUR=100 FREQ=330  ; E4
  BEEPER I=1 DUR=100 FREQ=330  ; E4
  G4 P200
  BEEPER I=1 DUR=100 FREQ=330  ; E4
  BEEPER I=1 DUR=100 FREQ=396  ; G4
  BEEPER I=1 DUR=100 FREQ=264  ; C4
  BEEPER I=1 DUR=100 FREQ=330  ; E4
  G4 P400
  BEEPER I=1 DUR=100 FREQ=440  ; A4
  BEEPER I=1 DUR=100 FREQ=440  ; A4
  BEEPER I=1 DUR=100 FREQ=440  ; A4
  BEEPER I=1 DUR=100 FREQ=440  ; A4
  G4 P200

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 34.033
#*# pid_ki = 3.912
#*# pid_kd = 74.023
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 71.821
#*# pid_ki = 2.055
#*# pid_kd = 627.533
#*#
#*# [input_shaper]
#*# shaper_type_x = zv
#*# shaper_freq_x = 46.8
#*# shaper_type_y = 3hump_ei
#*# shaper_freq_y = 48.0
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.412500, -0.512500, -0.500000, -0.400000, -0.387500
#*# 	  -0.400000, -0.487500, -0.487500, -0.387500, -0.325000
#*# 	  -0.337500, -0.312500, -0.237500, -0.112500, -0.087500
#*# 	  -0.250000, -0.212500, -0.137500, 0.037500, 0.187500
#*# 	  -0.087500, 0.000000, 0.162500, 0.387500, 0.500000
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 60.0
#*# max_x = 340.0
#*# min_y = 60.0
#*# max_y = 340.0
#*#
#*# [bltouch]
#*# z_offset = 0.550
